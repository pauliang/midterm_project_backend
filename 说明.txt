python版本:3.7
django版本:3.1
依赖包(除django以外):
django-cors-headers,pymysql
如遇其他无法启动问题,可尝试在项目文件夹里执行:
python manage.py migrate

目前尚未完成的功能:用户退出团队涉及的文档权限变更...其他必要的功能

目前发现前端不能向后端传送数组数据,后端不能向前端传送{xx:yy}之类的数据,在以下参数和返回值中会有说明
函数调用情况:
除main.js配置的域名之外,post地址默认均以group/开头,以xxx/结尾(不用忘记最后的/)

①创建团队:
create_group/
groupname:"团队名",groupintro:"团队简介",id:组长用户编号
返回值:1 成功,0 失败

②加入团队:
join_group/
id:用户编号,groupnum:团队编号
返回值:1 成功,2 已加入,0 失败

③退出团队(退出之后的文档权限变更部分还没有):
quit_group/
id:用户编号,groupnum:团队编号
返回值:1 成功,2 不在团队中,0 失败

④(批量)设置管理员:
set_admin/
users:"用户编号,用户编号,用户编号,..."
groupnum:团队编号
此处的users是将批量设置的用户编号以逗号分隔开组成的字符串,即若要设置为管理员的成员是1,3,5,7,那么users参数的内容就是"1,3,5,7".由于前端不能向后端发送数组,所以需要麻烦前端的同学进行一下处理
返回值:1 成功,0 失败

⑤(批量)撤销管理员:
cancel_admin/
同上

⑥根据团队编号获取成员:
get_users/
groupnum:团队编号
返回值:是以如下格式返回的数组
[[成员1],[成员2],[成员3],...],每个成员元素同时也是一个数组,内部结构:["用户名",用户编号,是否为组长(1/0),是否为管理员(1/0)],每个用户元素对应一个页面中的独立结构,这一独立结构要展示的信息则从每个用户元素中获取

⑦根据用户编号获取加入组:
get_groups/
id:用户编号
返回值:是以如下格式返回的数组
[[组1],[组2],[组3],...],每个组元素同时也是一个数组,内部结构:
["组名",组编号,组内人数,"小组简介"],处理思路同上理

⑧根据关键词搜索组:
search_groups/
key:"关键词"
返回值:返回的格式与⑦完全一致

---8.13更新:
对参数中的参数名做了修正,为方便替换,所有"usernum"均改为"id"

团队部分新增函数:
⑨管理员移出用户:
kick_out_user/
id:用户编号
groupnum:团队编号
返回:1 成功,0 失败

⑩解散团队:
dismiss_group/
groupnum:团队编号
返回:1 成功

11.发送邀请信息(没有做撤销功能):
send_invitation/
id:发送邀请者的用户编号
groupnum:发送邀请者所在团队的编号
receivename:接受邀请者的用户名
返回值:1 成功发送

12.获取接收到的邀请列表:
get_invitation_a/
id:用户编号
返回值:["发送邀请者用户名",组编号,"组名",是否被处理,邀请时间]
是否被处理的取值有三:0为未被处理,1为同意,-1为拒绝

13.获取发送出去的邀请列表:
get_invitation_b/
id:用户编号
返回值:["接受邀请者用户名",组编号,"组名",是否被处理,邀请时间]
是否被处理的取值有三:0为未被处理,1为同意,-1为拒绝

14.处理邀请:
handle_invitation/
id:用户编号
groupnum:组编号
op:处理选项,1为同意,-1为拒绝
返回值:1 成功

---8.14更新

新增权限操作部分,地址开头为autho/(千万不要掉了o)
①匹配权限
match_auth/
id:用户编号
docnum:文档编号
返回值:[x,y,z]
x表示查看,分享权限(这俩权限绑定在一起,能查看就能分享)
y表示评论权限
z表示修改权限
优先度递增,也就是说无法评论的必定无法修改,无法查看的必定无法评论
1表示具有对应权限,0表示没有
对于文档作者,总是返回[1,1,1]

②设置某文档的权限
set_doc_auth/
users:以","分隔开的用户名字符串(后端会依次转换为id处理)
docnum:文档编号
stat:文档权限状态,有以下几种(权限匹配者具有所有权限):
-1:仅作者能查看修改
0:不匹配者只能查看,分享,评论
1:不匹配者只能查看,分享
2:组内所有成员能查看评论修改
3:仅组内管理员能修改
返回:1 成功,0 失败

③设置组内通用权限(即上述中的权限状态2):
set_group_auth/
docnum:文档编号
groupnum:小组编号
返回值:1 成功

④设置组内管理员权限(即上述中的权限状态3):
set_admin_auth/
docnum:文档编号
groupnum:小组编号
返回值:1 成功

---8.16 更新

文档部分，其post地址皆以doc/开头:
①文档保存:
save_doc/
id:文档编号
msg:"文档内容"
userid:编辑者id
返回值:1 成功

②获取文档内容:
get_doc/
id:文档编号
op:操作参数,对应为:1-文档标题,2-文档简介,3-文档实际内容
返回值:字符串,将其值赋给文档编辑器即可

-----
③发表评论:
submit_comment/
id:用户编号
docnum:文档编号
content:"评论内容"
(前端无需发送时间数据)
返回:1 成功

④获取某文档评论:
get_comments/
docnum:文档编号
返回值:[[文档1],[文档2],...],文档列表元素:["用户名",评论时间,"评论内容"]
-----
"评论"函数部分参数及返回有改变,具体修改工作已由任博林同学完成


⑤更改文档信息:
change_info/
id:文档编号
msg:修改部分内容
op:参数,对应位:1-文档名,2-文档标题,3-文档简介

---
⑥搜索文档:
search_docs/
key:"关键词"
返回值:[[文档1],[文档2],[文档id,"文档名","文档标题","文档简介"],...]
---
已废弃,具体见8.18追加更新

⑦文档是否正在被修改:
match_edit/
id:文档编号
返回值:1 文档没有人正在修改,本用户进入修改界面;0 文档正在被他人修改,无法进行修改

⑧结束修改:
end_edit/
id:文档编号
返回值:1 成功
注意⑧和①的联系,"文档保存"不一定意味着编辑者已经结束修改,请在修改者确定关闭修改之后再调用函数⑧

---8.17 更新

⑨根据文档编号获取组号:
get_groupnum/
id:文档编号
返回:组号

新增权限操作函数:
将团队文档归为个人:
autho/change_owner/
id:文档编号
返回:1 成功

邀请部分函数新增参数"邀请时间",已在8.13更新内容中更新

修复了一些其他bug

---8.18更新

--消息通知部分:
在已有的部分函数里添加了发送通知的内容,同时新增函数(以下开头均为notice/):
①获取通知:
get_notice/
id:用户编号
op:通知类型,1为"评论提醒",2为"团队信息"
返回值:[[通知1],[通知2],[通知id,"通知内容",通知时间],...]

②读通知(即将未读消息变成已读):
read_notice/
nid:通知id
返回值:1 成功

③检查是否有未读通知:
check_notice/
id:用户编号
返回值:1 有未读通知,0 没有未读通知

④删除某条通知:
delete_notice/
nid:通知id
返回值:1 成功

⑤清空通知:
clear_notice/
id:用户编号
返回值:1 成功


"评论"函数部分参数及返回有改变,具体修改工作已由任博林同学完成
---追加更新
将个人文档归属小组:
autho/change_owner_b/
id:文档编号
groupnum:组号
返回值:1 成功


根据小组获得文档:
doc/get_group_docs/
id:当前用户id
groupnum:团队编号
返回值:对象数组
{isCollected(布尔变量):是否被当前用户收藏,docnum:文档id,docname:"文档名",author:作者id,lasttime:最后一次修改时间}

搜索文档:
doc/search_docs/
key:"关键词"
返回值:对象数组
{docnum:文档id,docname:"文档名",author:作者id,lasttime:最后一次修改时间}


根据小组获得组长:
group/get_leader/
groupnum:团队id
返回值:组长id

获得用户在团队中的身份:
group/get_identity/
id:用户id
groupnum:团队id
返回值:3 组长,2 管理员,1 普通用户

---追追加更新
获取文档内容新增可选参数:
doc/get_doc/
id:文档id
op:1-文档标题(很可能没用),2-文档简介(可能没用),3-文档内容,4-文档名
返回:"实际内容"